{"ast":null,"code":"var _jsxFileName = \"/Applications/MAMP/htdocs/LocalPrice/client/src/contexts/AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { authService } from '../services/api';\nimport toast from 'react-hot-toast';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth doit être utilisé dans un AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    // Vérifier si l'utilisateur est connecté au chargement de l'app\n    const token = localStorage.getItem('token');\n    const savedUser = localStorage.getItem('user');\n    if (token && savedUser) {\n      try {\n        setUser(JSON.parse(savedUser));\n        // Vérifier la validité du token\n        authService.getProfile().then(response => {\n          if (response.data.success) {\n            setUser(response.data.data);\n            localStorage.setItem('user', JSON.stringify(response.data.data));\n          }\n        }).catch(() => {\n          // Token invalide, déconnecter l'utilisateur\n          logout();\n        });\n      } catch (error) {\n        logout();\n      }\n    }\n    setLoading(false);\n  }, []);\n  const login = async (email, password) => {\n    try {\n      setLoading(true);\n      const response = await authService.login(email, password);\n      if (response.data.success) {\n        const {\n          user: userData,\n          token\n        } = response.data.data;\n        setUser(userData);\n        localStorage.setItem('token', token);\n        localStorage.setItem('user', JSON.stringify(userData));\n        toast.success('Connexion réussie !');\n        return {\n          success: true\n        };\n      } else {\n        toast.error(response.data.message || 'Erreur de connexion');\n        return {\n          success: false,\n          message: response.data.message\n        };\n      }\n    } catch (error) {\n      var _error$response, _error$response$data;\n      const message = ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Erreur de connexion';\n      toast.error(message);\n      return {\n        success: false,\n        message\n      };\n    } finally {\n      setLoading(false);\n    }\n  };\n  const register = async (username, email, password) => {\n    try {\n      setLoading(true);\n      const response = await authService.register(username, email, password);\n      if (response.data.success) {\n        const {\n          user: userData,\n          token\n        } = response.data.data;\n        setUser(userData);\n        localStorage.setItem('token', token);\n        localStorage.setItem('user', JSON.stringify(userData));\n        toast.success('Inscription réussie !');\n        return {\n          success: true\n        };\n      } else {\n        toast.error(response.data.message || 'Erreur d\\'inscription');\n        return {\n          success: false,\n          message: response.data.message\n        };\n      }\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      const message = ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || 'Erreur d\\'inscription';\n      toast.error(message);\n      return {\n        success: false,\n        message\n      };\n    } finally {\n      setLoading(false);\n    }\n  };\n  const logout = () => {\n    setUser(null);\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    toast.success('Déconnexion réussie');\n  };\n  const updateProfile = async profileData => {\n    try {\n      setLoading(true);\n      const response = await authService.updateProfile(profileData);\n      if (response.data.success) {\n        // Mettre à jour les données utilisateur\n        const updatedUser = {\n          ...user,\n          ...profileData\n        };\n        setUser(updatedUser);\n        localStorage.setItem('user', JSON.stringify(updatedUser));\n        toast.success('Profil mis à jour !');\n        return {\n          success: true\n        };\n      } else {\n        toast.error(response.data.message || 'Erreur de mise à jour');\n        return {\n          success: false,\n          message: response.data.message\n        };\n      }\n    } catch (error) {\n      var _error$response3, _error$response3$data;\n      const message = ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.message) || 'Erreur de mise à jour';\n      toast.error(message);\n      return {\n        success: false,\n        message\n      };\n    } finally {\n      setLoading(false);\n    }\n  };\n  const changePassword = async (currentPassword, newPassword) => {\n    try {\n      setLoading(true);\n      const response = await authService.changePassword(currentPassword, newPassword);\n      if (response.data.success) {\n        toast.success('Mot de passe changé !');\n        return {\n          success: true\n        };\n      } else {\n        toast.error(response.data.message || 'Erreur de changement de mot de passe');\n        return {\n          success: false,\n          message: response.data.message\n        };\n      }\n    } catch (error) {\n      var _error$response4, _error$response4$data;\n      const message = ((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : (_error$response4$data = _error$response4.data) === null || _error$response4$data === void 0 ? void 0 : _error$response4$data.message) || 'Erreur de changement de mot de passe';\n      toast.error(message);\n      return {\n        success: false,\n        message\n      };\n    } finally {\n      setLoading(false);\n    }\n  };\n  const value = {\n    user,\n    loading,\n    login,\n    register,\n    logout,\n    updateProfile,\n    changePassword,\n    isAuthenticated: !!user\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 161,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"NiO5z6JIqzX62LS5UWDgIqbZYyY=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","authService","toast","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","loading","setLoading","token","localStorage","getItem","savedUser","JSON","parse","getProfile","then","response","data","success","setItem","stringify","catch","logout","error","login","email","password","userData","message","_error$response","_error$response$data","register","username","_error$response2","_error$response2$data","removeItem","updateProfile","profileData","updatedUser","_error$response3","_error$response3$data","changePassword","currentPassword","newPassword","_error$response4","_error$response4$data","value","isAuthenticated","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Applications/MAMP/htdocs/LocalPrice/client/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\nimport { authService } from '../services/api';\nimport toast from 'react-hot-toast';\n\nconst AuthContext = createContext();\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth doit être utilisé dans un AuthProvider');\n  }\n  return context;\n};\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    // Vérifier si l'utilisateur est connecté au chargement de l'app\n    const token = localStorage.getItem('token');\n    const savedUser = localStorage.getItem('user');\n    \n    if (token && savedUser) {\n      try {\n        setUser(JSON.parse(savedUser));\n        // Vérifier la validité du token\n        authService.getProfile()\n          .then(response => {\n            if (response.data.success) {\n              setUser(response.data.data);\n              localStorage.setItem('user', JSON.stringify(response.data.data));\n            }\n          })\n          .catch(() => {\n            // Token invalide, déconnecter l'utilisateur\n            logout();\n          });\n      } catch (error) {\n        logout();\n      }\n    }\n    setLoading(false);\n  }, []);\n\n  const login = async (email, password) => {\n    try {\n      setLoading(true);\n      const response = await authService.login(email, password);\n      \n      if (response.data.success) {\n        const { user: userData, token } = response.data.data;\n        setUser(userData);\n        localStorage.setItem('token', token);\n        localStorage.setItem('user', JSON.stringify(userData));\n        toast.success('Connexion réussie !');\n        return { success: true };\n      } else {\n        toast.error(response.data.message || 'Erreur de connexion');\n        return { success: false, message: response.data.message };\n      }\n    } catch (error) {\n      const message = error.response?.data?.message || 'Erreur de connexion';\n      toast.error(message);\n      return { success: false, message };\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const register = async (username, email, password) => {\n    try {\n      setLoading(true);\n      const response = await authService.register(username, email, password);\n      \n      if (response.data.success) {\n        const { user: userData, token } = response.data.data;\n        setUser(userData);\n        localStorage.setItem('token', token);\n        localStorage.setItem('user', JSON.stringify(userData));\n        toast.success('Inscription réussie !');\n        return { success: true };\n      } else {\n        toast.error(response.data.message || 'Erreur d\\'inscription');\n        return { success: false, message: response.data.message };\n      }\n    } catch (error) {\n      const message = error.response?.data?.message || 'Erreur d\\'inscription';\n      toast.error(message);\n      return { success: false, message };\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const logout = () => {\n    setUser(null);\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    toast.success('Déconnexion réussie');\n  };\n\n  const updateProfile = async (profileData) => {\n    try {\n      setLoading(true);\n      const response = await authService.updateProfile(profileData);\n      \n      if (response.data.success) {\n        // Mettre à jour les données utilisateur\n        const updatedUser = { ...user, ...profileData };\n        setUser(updatedUser);\n        localStorage.setItem('user', JSON.stringify(updatedUser));\n        toast.success('Profil mis à jour !');\n        return { success: true };\n      } else {\n        toast.error(response.data.message || 'Erreur de mise à jour');\n        return { success: false, message: response.data.message };\n      }\n    } catch (error) {\n      const message = error.response?.data?.message || 'Erreur de mise à jour';\n      toast.error(message);\n      return { success: false, message };\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const changePassword = async (currentPassword, newPassword) => {\n    try {\n      setLoading(true);\n      const response = await authService.changePassword(currentPassword, newPassword);\n      \n      if (response.data.success) {\n        toast.success('Mot de passe changé !');\n        return { success: true };\n      } else {\n        toast.error(response.data.message || 'Erreur de changement de mot de passe');\n        return { success: false, message: response.data.message };\n      }\n    } catch (error) {\n      const message = error.response?.data?.message || 'Erreur de changement de mot de passe';\n      toast.error(message);\n      return { success: false, message };\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const value = {\n    user,\n    loading,\n    login,\n    register,\n    logout,\n    updateProfile,\n    changePassword,\n    isAuthenticated: !!user,\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}